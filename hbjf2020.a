!src "macros.a"
!src "stub.a"

; -------------------
;  ASM
; -------------------

*=$0820

	jsr clrscr ; clear screen

	+setabs foreground, black
	+setabs background, dark_grey

	; switch to lowercase mode
	+switch_lowercase

	; set 38 column mode
	+set horscroll, .col38

	;+set $0400, .zee ; .zee=$1a='Z'


beginning

	;enable all sprites

	+setabs sprite_enable, $ff


	; copy sprite data for all sprites 
	ldx #$00
-
	lda sprite_0, x
	sta $2000 + 64 * 0, x
	lda sprite_1, x
	sta $2000 + 64 * 1, x
	lda sprite_2, x
	sta $2000 + 64 * 2, x
	inx
	cpx #$41
	bne -

	; set sprite pointer to $2000
	;lda #$80 ; = $2000 / 64
	;sta $07f8

	+setabs sprite_ptr_0, ($2000 + 64 * 0) / 64 ; j
	+setabs sprite_ptr_1, ($2000 + 64 * 1) / 64 ; e
	+setabs sprite_ptr_2, ($2000 + 64 * 2) / 64 ; f
	+setabs sprite_ptr_3, ($2000 + 64 * 2) / 64 ; f, same as sprite 2

	; set sprite 4 first sprites to multicolor
	;lda #$01
	;sta $d01c

	+setabs sprite_multi, 2^0 + 2^1 + 2^2 + 2^3
	+setabs sprite_x_expansion, 2^0 + 2^1 + 2^2 + 2^3
	+setabs sprite_y_expansion, 2^0 + 2^1 + 2^2 + 2^3


	lda #light_grey ; Sprite multicolor 1
	sta $d025
	lda #$06 ; Sprite multicolor 2
	sta $d026

	+setabs sprite_col_0, dark_grey
	+setabs sprite_col_1, dark_grey
	+setabs sprite_col_2, dark_grey
	+setabs sprite_col_3, dark_grey

	+setabs sprite_0_x, ($64)
	+setabs sprite_1_x, ($64 + $2b)
	+setabs sprite_2_x, ($64 + $2b + $26)
	+setabs sprite_3_x, ($64 + $2b + $26 + $1d)

	+setabs sprite_0_y, $84
	+setabs sprite_1_y, $84
	+setabs sprite_2_y, $84
	+setabs sprite_3_y, $84

	;+sleep
	;ldx #$07
	;stx horscroll

	ldy #$00


loop
	+sleep
	ldx #$07
	stx horscroll

	ldx #$00
	sty .hi1
-
	lda .msg, y
	cmp #$00
	bne +
	ldy #$00
	jmp -
+
	iny

	;sta $0400, x
	sta $0680, x

	inx
	cpx #$27
	bne -

	;tya
	;sbc #$26
	;tay
	ldy .hi1
	iny
	lda .msg, y
	cmp #$00
	bne +
	ldy #$00
	sty .hi1
+


start_horscroll

	ldx #$07
-
	;+sleep
	;+sleep

	stx horscroll
	cpx #$00
	beq loop
	dex
	+sleep
	jmp -



	rts


; ---------------
;  data
; ---------------

!addr clrscr = $e544
!addr background = $d020
!addr foreground = $d021
!addr horscroll = $d016

!addr sprite_enable = $d015

!addr sprite_ptr_0 = $07f8
!addr sprite_ptr_1 = $07f9
!addr sprite_ptr_2 = $07fa
!addr sprite_ptr_3 = $07fb

!addr sprite_col_0 = $d027
!addr sprite_col_1 = $d028
!addr sprite_col_2 = $d029
!addr sprite_col_3 = $d02a

!addr sprite_multi = $d01c

!addr sprite_0_x = $d000
!addr sprite_0_y = $d001
!addr sprite_1_x = $d002
!addr sprite_1_y = $d003
!addr sprite_2_x = $d004
!addr sprite_2_y = $d005
!addr sprite_3_x = $d006
!addr sprite_3_y = $d007

!addr sprite_x_expansion = $d01d
!addr sprite_y_expansion = $d017

; 38 columns mode for horscroll

.col40 !byte $08
.col38 !byte $00

; colors

black				= $00
white				= $01 
red					= $02
blue				= $06
cyan				= $03
purple			= $04
green				= $05
yellow			= $07
orange			= $08
brown				= $09
pink				= $0A
dark_grey		= $0B
grey				= $0C
light_green	= $0D
light_blue	= $0E
light_grey	= $0F

.zee !byte $1A

; registers 

.r1		!byte $fb  ; fb/fc  as 16-bits register 1
.hi1	!byte $fb
.lo1	!byte $fc

.r2		!byte $fd  ; fd/fe  as 16-bits register 2
.hi2	!byte $fd
.lo2	!byte $fe

; some test title
.msg !scr "      Bonsoir papa. Ceci est un test. Ce message devrait avoir plus de 38 caracteres de long, mais moins de 256 caracteres. --- ", 0

; color scheme
.colors !byte $01, $0e, $06, $0e

!src "sprites.a"

; vim: ft=acme ts=2 sw=2
